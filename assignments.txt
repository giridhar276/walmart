write a program to capture any filename from the keyboard and display its filename and extension seperately

Output:

Enter any filename:  abc.py

filename : abc
extension: py

--------------------------------------------------------------------------------------------------------

write  a program to capture some delimeted string from the keyboard and split the string with comma and display the length after splitting.

Output:
Enter any delimited string :  python,perl,unix,scala,spark

List elements are : [ python , perl, unix,scala , spark ]
Length of the list  : 5


--------------------------------------------------------------------------------------------------------

write a program for performing the below operaitons

1. define empty tuple
2. append  "unix" to the tuple
3. append few more elements like 'spark', 'scala','hadoop',sccm' to the list
4  append few more elements likep 'c','cp','java','salesforce','sap','unix' to the list
5.  remove java
6  remove salesforce -
7. add  'oracle' at the index 0
8. add ' mongodb' at the index 5
9. reverse all the elements
10. display the total.  no. of elements of the list
11. display the total count of 'unix' in the list

--------------------------------------------------------------------------------------------------------

define tuple as below
numbers = (10,10,10,20,30,10,430,30)

write a program to remove all the duplicates of the tuple
------------------------------------------------------------------------------------------------------
write a program to perform the below operations

1. define empty dictionary
2.  add the below keys and values one by one
    key -  "chap1"
    value-  10
    -----------
    key -  "chap2"
    value- 20
    ------------  
    key -  "chap3"
    value- 30

3. display ONLY keys in list format
4. display ONLY values in tuple format
5. display the key-values in list of tuples format



--------------------------------------------------------------------------------------------------------

write a program to capture 2 numbers from the keyboard and display its sum


Enter first number : 10
Enter second number: 20

Total : 30



--------------------------------------------------------------------------------------------------------

write a program to capture "python programming" from the keyboard and replace "python" with "scala"



--------------------------------------------------------------------------------------------------------

define two lists
alist = [10,20,30,40,50,10]
blist = [40,50,60,70,80]

display all the UNIQUE elements of both alist and blist
display all the COMMON elements of both alist and blist
remove all the elements of blist from alist   ( Output :    [10,20,30])

----------------------------------------------------------------------------------------------------
define a string as below

lang = "perl,unix,hadoop,scala,spark,ruby,go"

write a program to check whether 'python' is existing in the string or not.


--------------------------------------------------------------------------------------------------------
capture any string from the keyboard and perform the below operations

1. check whether the string is upper or not
2. convert the string to list
3. display the string exactly in the center of 30 spaces width
4. convert the string into lower case




--------------------------------------------------------------------------------------------------------

  write a progam to capture filename from the keyboard and display the type of the file
if the filename is ending with .py  .... display "Its python file"
if the filename is ending with .pl   .... display "Its perl file"
If the filename is ending with .c  ....... display "Its C lang file"
if the filename is ending with .json ...  display "Its json file"

Enter any filename :  info.py
Python file



--------------------------------------------------------------------------------------------------------


write a program to validate the IP address

Enter any IP address : 192.168.0.1
Its valid IP
Enter any IP address : 1001.1.2.3
Invalid IP



--------------------------------------------------------------------------------------------------------

write a program to capture any string from the keyboard and perform the below

if the string is defined in uppercase......   convert the string to lower and display it

if the string is defined in lowercase ...... convert the string to upper and display it.


--------------------------------------------------------------------------------------------------------

write a program to capture username and password from the keyboard and validate the password

condition1:  length of the password should be greater than  5
condition2:   length of the password should be less than 12
condition3:  atleast  one symbol ( @ or * or  $ ) should exist in the password
condition4:  whole password SHOULD not be in upper case




--------------------------------------------------------------------------------------------------------

define some tuple as below

alist = ("unix","hadoop","oracle","scala")

and write a program to append "spark" to the tuple



--------------------------------------------------------------------------------------------------------

write a program to display all the numbers from 50 to 1  

--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------

define some list as below

alist = ["google","oracle","microsoft"]

write a program to
add "http://www"  at the beginning and  
add ".com" at tht end of the string

Output:
http://www.google.com
http://www/.oracle.com
http://www.microsoft.com



--------------------------------------------------------------------------------------------------------

define some list as below

domains = ["google","www.unix","oracle.com"]

write a program

to add "www"  at the beginning  if the string is not starting with "www"
  and
".com" at the end of each string if the string is not ending with ".com"

Output:
www.google.com
www.unix.com
www.oracle.com


--------------------------------------------------------------------------------------------------------

write a program to display the below IP addresses

192.168.0.1
192.168.0.2
192.168.0.3
..
..
192.168.0.10



--------------------------------------------------------------------------------------------------------

write a program to display the below IP addresses

192.168.0.1
192.168.0.2
192.168.0.3
..
..
192.168.0.10
192.168.1.1
192.168.1.2
192.168.1.3
..
..
192.168.1.10



--------------------------------------------------------------------------------------------------------
define dictionary as below

infodoc =  { 2001: {"ap":70}  , 2002:{"tn":75} , 2003:{"up":50} }

write a program to display the below output

state literacy rate
------  ---------------
ap       70
tn        75
up       50



--------------------------------------------------------------------------------------------------------

define some dictionary as below

adict = {"emp1":["raj",28] ,"emp2":["ram",34] ,"emp3":["rita",24]}

write a program to check whether the key "emp2" is existing in the list or not

---------------------------------------------------------------------------------------------

define some list as below

data = ["perl","unix","perl","scala","perl"]

write a program to count the no. of occurences of each item

perl 3
unix 1
scala 1

---------------------------------------------------------------------------------------------
define a list below

colors = [
{
"colors": "red",
"values": "#f00"
},
{
"colors": "green",
"values": "#0f0"
},
{
"colors": "blue",
"values": "#00f"
},
{
"colors": "cyan",
"values": "#0ff"
},
{
"colors": "magenta",
"values": "#f0f"
},
{
"colors": "yellow",
"values": "#ff0"
},
{
"colors": "black",
"values": "#000"
}
]
write a program to display all the colors and its values.

red(#f00)
green(#0f0)
blue(#00f)
cyan(#0ff)
magenta(#f0f)
yellow(#ff0)
black(#000)


--------------------------------------------------------------------------------------------
define a dictionray as below

{
"id": "0001",
"type": "donut",
"name": "Cake",
"image":
{
"url": "images/0001.jpg",
"width": 200,
"height": 200
},
"thumbnail":
{
"url": "images/thumbnails/0001.jpg",
"width": 32,
"height": 32
}
}

write a program to display the below output:

id           : 0001
type         :donut
name         : Cake
url          : images/0001.jpg
url          : images/thumbnails/0001.jpg


info = {
"id": "0001",
"type": "donut",
"name": "Cake",
"image":
{
"url": "images/0001.jpg",
"width": 200,
"height": 200
},
"thumbnail":
{
"url": "images/thumbnails/0001.jpg",
"width": 32,
"height": 32
}
}

for key in info:
    if isinstance(info[key] , dict ):
        print(key.ljust(10), info[key]["url"])
    else:
        print(key.ljust(10) , info[key])


------------------------------------------------------------------------------------------
define dictionary as below


ydict = {
  "kind": "youtube#searchListResponse",
  "etag": "\"m2yskBQFythfE4irbTIeOgYYfBU/PaiEDiVxOyCWelLPuuwa9LKz3Gk\"",
  "nextPageToken": "CAUQAA",
  "regionCode": "KE",
  "pageInfo": {
    "totalResults": 4249,
    "resultsPerPage": 5
  },
  "items": [
    {
      "kind": "youtube#searchResult",
      "etag": "\"m2yskBQFythfE4irbTIeOgYYfBU/QpOIr3QKlV5EUlzfFcVvDiJT0hw\"",
      "id": {
        "kind": "youtube#channel",
        "channelId": "UCJowOS1R0FnhipXVqEnYU1A"
      }
    },
    {
      "kind": "youtube#searchResult",
      "etag": "\"m2yskBQFythfE4irbTIeOgYYfBU/AWutzVOt_5p1iLVifyBdfoSTf9E\"",
      "id": {
        "kind": "youtube#video",
        "videoId": "Eqa2nAAhHN0"
      }
    },
    {
      "kind": "youtube#searchResult",
      "etag": "\"m2yskBQFythfE4irbTIeOgYYfBU/2dIR9BTfr7QphpBuY3hPU-h5u-4\"",
      "id": {
        "kind": "youtube#video",
        "videoId": "IirngItQuVs"
      }
    }
  ]
}




write a program to display all etag  information from the dictionary
sol:
if "etag" in ydict:
    print(ydict["etag"])

for key in  ydict:
    if isinstance(ydict[key], list):
        for element in ydict[key]:
            print(element["etag"])




--------------------------------------------------------------------------------------------------------

create a dictionary as below

{
"id": "0001",
"type": "donut",
"name": "Cake",
"ppu": 0.55,
"batters":
{
"batter":
[
{ "id": "1001", "type": "Regular" },
{ "id": "1002", "type": "Chocolate" },
{ "id": "1003", "type": "Blueberry" },
{ "id": "1004", "type": "Devil's Food" }
]
},
"topping":
[
{ "id": "5001", "type": "None" },
{ "id": "5002", "type": "Glazed" },
{ "id": "5005", "type": "Sugar" },
{ "id": "5007", "type": "Powdered Sugar" },
{ "id": "5006", "type": "Chocolate with Sprinkles" },
{ "id": "5003", "type": "Chocolate" },
{ "id": "5004", "type": "Maple" }
]
}

write a program to display the below output:

Regular (1001)
Chocolate (1002)
Blueberry (1003)
Devil's Food (1004)


sol :
for key in info:
    if key == "batters":
        if isinstance(info[key] , dict):
            subdict = info[key]
            for element in subdict["batter"]:
                #print(element)
                for key in element:
                    print(element[key],end = " ")
                print()


---------------------------------------------------------------------------------------------------------
https://opensource.adobe.com/Spry/samples/data_region/JSONDataSetSample.html


items =[
{
"id": "0001",
"type": "donut",
"name": "Cake",
"ppu": 0.55,
"batters":
{
"batter":
[
{ "id": "1001", "type": "Regular" },
{ "id": "1002", "type": "Chocolate" },
{ "id": "1003", "type": "Blueberry" },
{ "id": "1004", "type": "Devil's Food" }
]
},
"topping":
[
{ "id": "5001", "type": "None" },
{ "id": "5002", "type": "Glazed" },
{ "id": "5005", "type": "Sugar" },
{ "id": "5007", "type": "Powdered Sugar" },
{ "id": "5006", "type": "Chocolate with Sprinkles" },
{ "id": "5003", "type": "Chocolate" },
{ "id": "5004", "type": "Maple" }
]
},
{
"id": "0002",
"type": "donut",
"name": "Raised",
"ppu": 0.55,
"batters":
{
"batter":
[
{ "id": "1001", "type": "Regular" }
]
},
"topping":
[
{ "id": "5001", "type": "None" },
{ "id": "5002", "type": "Glazed" },
{ "id": "5005", "type": "Sugar" },
{ "id": "5003", "type": "Chocolate" },
{ "id": "5004", "type": "Maple" }
]
},
{
"id": "0003",
"type": "donut",
"name": "Old Fashioned",
"ppu": 0.55,
"batters":
{
"batter":
[
{ "id": "1001", "type": "Regular" },
{ "id": "1002", "type": "Chocolate" }
]
},
"topping":
[
{ "id": "5001", "type": "None" },
{ "id": "5002", "type": "Glazed" },
{ "id": "5003", "type": "Chocolate" },
{ "id": "5004", "type": "Maple" }
]
}
]


write a program to display the below output:


Batters:

Regular (1001)
Chocolate (1002)
Blueberry (1003)
Devil's Food (1004)
Regular (1001)
Regular (1001)
Chocolate (1002)

---------------------------------------------------------------------------

write a program to display all the content of the file line by line

import urllib.request

link = "http://samplecsvs.s3.amazonaws.com/Sacramentorealestatetransactions.csv"

filename = link.split("/")[-1]

urllib.request.urlretrieve(link, filename)

import csv
with open(filename) as fobj:
    reader= csv.reader(fobj)
    for line in reader:
        print(line)

---------------------------------------------------------------------------

write a program to display ONLY street and city from the file


import csv
with open(filename) as fobj:
    reader= csv.reader(fobj)
    for line in reader:
        print(line[0] , line[1])

---------------------------------------------------------------------------

write a program to display ONLY city names which are UNIQUE

import csv
cityset = set()
with open(filename) as fobj:
    reader= csv.reader(fobj)
    for line in reader:
        cityset.add(line[1])	
        
for city in cityset:
    print(city)
    
    
# using list
filename = "Sacramentorealestatetransactions.csv"
import csv
citylist = []
with open(filename) as fobj:
    reader= csv.reader(fobj)
    for line in reader:
        citylist.append(line[1])
        
for city in set(citylist):
    print(city)
        

------------------------------------------------------------------------------------------
write a program to read the realestate.csv file and write the output to backup.csv where type is Residential

------------------------------------------------------------------------------------------





------------------------------------------------------------------------------------------------
write a program to display all the files of the current directory
------------------------------------------------------------------------------------------------

write a program to display all the files of the home directory
------------------------------------------------------------------------------------------------
write a program to display ONLY .py files of your current directory
------------------------------------------------------------------------------------------------
write a program to display all the files and directories as below


files
-----
file1.py
file2.py

directories
------------
dir1
dir2

------------------------------------------------------------------------------------------------
write a program to display all the files and its size from the current directory

file1.py  10 bytes
file2.py  343 bytes

------------------------------------------------------------------------------------------------

write a program to delete all .csv files in the current directory


------------------------------------------------------------------------------------------------

write a program to create 100 directories as below

dir1
dir2
dir3
dir4
..
..
dir100

-------------------------------------------------------------------

write a program to display the below information

1.  current working directory
2.  current user name
3.  current OS name
4.  current version of python being used
5.  path of python executable
6.  today's timestamp
7.  yesterday's date
9.  tomorrow's date
10  this month calendar
11. calendar of the whole month

-----------------------------------------------------------
create 2 directories as below in the current directory

source      :  copy few files to the source folder

destination :

write a program to copy all the files from source to destination

-----------------------------------------------------------

define some password as below and 

password =  "welcome@123"

write a program to encrypt and decrypt the string


-----------------------------------------------------------



write an object oriented to display all the content of the file






mysql commands
-----------------


mysql -u root -p   ( enter)


display all existing database
-------------------------------
show databases;

creating database
-----------------
create database walmart;

show databases;

accessing your database
--------------------------
use walmart ;

creating table
----------------
create table realestate ( street varchar(100) , city varchar(100) ) ;

view the table structure
--------------------------
desc realestate ;

inserting records
---------------------
insert into realestate values('101 GM ROad', 'Bangalore');
insert into realestate values('110 MG ROad', 'Hyderabad');


select * from realestate ;



create a table with the records matching realestate.csv

create table realestate1 (street varchar(100) ,city varchar(100) , zip varchar(100) , state varchar(100),beds varchar(100), baths varchar(100) ,sq__ft varchar(100),type varchar(100),sale_date varchar(100),	price varchar(100),	latitude varchar(100) ,longitude varchar(100) );



program
--------
import csv
import pymysql
from configparser import ConfigParser
def connectdb(host,port,user,password,database):

    try:
        # establishing the connection
        with pymysql.connect(host = host,port = int(port) , user = user ,password = password,database = database) as db:
            with open("Sacramentorealestatetransactions.csv","r") as fobj:
                reader = csv.reader(fobj)
                for line in reader:
                    print(line)

                    query = "insert into realestate1 values('{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}')".format(*line)
                    print(query)
                    db.execute(query)
                    print(str(db.rowcount) + "inserted")
                
    except Exception as error:
        print("Exception found",error)

    
if __name__ == "__main__" :

    parser = ConfigParser()
    parser.read('properties.conf')
    user = parser.get('database_config', 'username')
    password = parser.get('database_config', 'password')
    host = parser.get('database_config', 'hostname')
    port = parser.get('database_config', 'port')
    database = parser.get('database_config', 'database')
    server = parser.get('server_config','server')
    connectdb(host,port,user,password,database)


properties.conf
-----------------
[database_config]
username = root
password = india@123
hostname = localhost
port = 3306
database = walmart
[server_config]
server = us.walmart.com




write to excel
--------------
import pymysql
import csv
import time
from openpyxl import Workbook
wb = Workbook()

# grab the active worksheet
ws = wb.active

def connectdb(host,port,user,password,database):

    try:
        # establishing the connection
        with pymysql.connect(host = host,port = port , user = user ,password = password,database = database) as db:
            query = "select * from realestate1"
            db.execute(query)
            for record in db.fetchall():
                ws.append(record)

        filename = time.strftime("%d_%b_%Y.xlsx")
        wb.save(filename)
    except Exception as error:
        print("Exception found",error)



connectdb("localhost",3306,"root","india@123","walmart")


creating encrypted password
--------------------------------

from cryptography.fernet import Fernet
key = Fernet.generate_key()
print(key)

# storing the key in seperate file
file = open('key.key', 'wb')
# The key is type bytes still
file.write(key) 
file.close()

#reading the key
fobj = open("key.key","rb")
key = fobj.read()
key = key.strip()
fobj.close()


password = input("Enter password :")

password = password.encode()
f = Fernet(key)


encrypted = f.encrypt(password)
# copy the encrypted password to the properties.conf where password is hardcoded ()
print("Your encrypted password is  :", encrypted)



your conf should look like below
------------------------------------
[database_config]
username = root
password = gAAAAABdwoRgk5TOtE5w75Hsw_vriqJTs1MvGuBimNdJYq_hN5Zpn448nGmW0l-XdRonDEhGJJYLFq3XbKYywv6OVWlSD6AxkQ==
hostname = localhost
port = 3306
database = walmart
[server_config]
server = us.walmart.com



program to display all the records with decrypted password
-------------------------------------------------------------
import pymysql
import csv
import base64
from cryptography.fernet import Fernet
from configparser import ConfigParser
def connectdb(host,port,user,password,database):
    try:
        # establishing the connection
        with pymysql.connect(host = host,port = int(port) , user = user ,password = password,database = database) as db:
            with open("Sacramentorealestatetransactions.csv","r") as fobj:
                reader = csv.reader(fobj)
                for line in reader:
                    print(line)

                    query = "insert into realestate1 values('{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}','{}')".format(*line)
                    print(query)
                    db.execute(query)
                    print(str(db.rowcount) + "inserted")
                
    except Exception as error:
        print("Exception found",error)
    
if __name__ == "__main__" :
    with open("key.key","rb") as fpass:
        key = fpass.read()
        key = key.strip()
    f = Fernet(key)
    parser = ConfigParser()
    parser.read('properties.conf')
    user = parser.get('database_config', 'username')
    password = parser.get('database_config', 'password')
    host = parser.get('database_config', 'hostname')
    port = parser.get('database_config', 'port')
    database = parser.get('database_config','database')
    password = f.decrypt(password.encode('utf-8'))
    password = password.decode()
    connectdb(host,port,user,password,database)






write a program to upload any single file to your github gist.



write a program to upload all the files to the gist.













































