*** Everything is python is object *****
*** Every object contains set of methods *******

objects in python
-------------------

number
-----
number can be integer or octal or decimal or hexa

val = 10
aval = 43.43

string
-----
string can be defined in single or double or triple quotes

aname = 'python programming'
bname = "unix shell"
cname = """scala language"""


list ( just like array in C)
-------------------------
list contains set of elements
Elements can be set of numbers or strings or any combination
list elements are defined in []

alist = [10,20,30,40]
blist = ["unix","java","hadoop"]
clist = [10,20,30,"unix","scala"]


tuple  ( READ ONLY )
--------
*** tuple is immutable(unchangable )
tuple contains set of elements
Elements can be set of numbers or strings or any combination
tuple  elements are defined in ().
*** Once defined .. elements inside tuple cannot be modified *****


atup = (10,20,30)
btup = ("unix","oracle")
ctup = (10,"unix","scala",40)


dictionary
-------------

dictionary contains elements in the form of keys and values.
** keys are always UNIQUE

syntax  :    object = { key:value  , key:value  , key:value }
example :     book  = {"chap1":10 , "chap2":20 , "chap3":30 }
              info  = {"chap1":[10,"US","Mark"] , "chap2":[20,"Sen","UK" ], "chap3":[30,"AUS",400] }
              



set
----
set is unordered collection of UNIQUE items
set elements are defied in {}.

aset = {10,10,10,10,20,20}


how to display all the available builtin functions and Exceptions ?

In the console

dir(__builtins__)            ----> wil display all the functions and Exceptions


methods & functions
----------------------

methods are object specific.
string methods are different to list methods  AND methods are accessible with . operator


functions are common for all the objects


print()   : display the output on the screen
len()     : display the length of the string or list or tuple or dictionary
range()   : display the range of numbers
input()   : capture the input from keyboard
max()     : largest number
min()     : smallest number
sum()     : display the total of all the nummbers of list
help()    : just like man in linux
dir()     : display all the available methods of any object
zip()     : combine 2 lists
open()    : open any file

conversion functions
str()
int()
float()
oct()
list()
tuple()
set()
dict()


commenting in python
-------------------


single line comment ( #)



multi line comment : all the lines defined in between ''' and ''' are ignored by interpreter


"""
all these
lines
are ignored
"""


'''
all these
lines
are ignored

'''












level1
level1
level1
level1
if cond:
    level2
    level2
    level2
else:
    level2
    level2
    level2
###########################
level1
level1
if cond:
    level2
    level2
    if condition:
	level3
	Level3
	level3
    else:
	level3
	level3
else:
    level2
    level2
    level2


operators in python
---------------------
arithmetic operators :   + - * % / **
relational operators :  < > <= >= == !=
logical operators    :  and    or     not
                        if len(name) > 0  and name.isupper():
---------------------------------
assignment operator   :  ( ++ and -- are not allowed in python )

val = 10
val +=10   (or) val = val + 1
val -=10   (or) val = val - 1
---------------------------------
special operators    :   in
                         as  ( used in exception handling and libraries)
---------------------------------
Eg:       if 10 in [10,20,30] :
                   # true
---------------------------------
name = "python programming"
if "python" in name:
    # true
---------------------------------
adict = {"chap1":10 ,"chap2":20}

if "chap1" in adict:             ------------------> checking for existence of the key
    # true
---------------------------------


statements
------------


conditional statements
-----------------------
if 
if-else
if-elif-elif..... else



control statements
----------------------
for 
while


jump statements
-------------------
break
continue


file handling
------------------

- working with flat files  ( txt csv conf log..... )

- working with third party files ( pdf  pptx  xlsx doc  mp4 )


- working with flat files  
-----------------------------


reading the file
-------------------
- reading with open()
- reading with csv library
- reading with pandas library

opening the file
-------------------
syntax :    object = open(filename, mode)
example:      fobj = open("clients.txt","r")      # opening in read mode
              fobj = open("clients.txt","w")      # in write mode
              fobj = open("clients.txt","a")      # in append mode


closing the file
--------------------
fobj.close()






exception handling
---------------------

There are 2 types of errors

1. syntax error

2. runtime error


handling the exceptions in runtime is known as exception handling


try
except
else
finally
raise


definition (or) function (or)  subroutine
-------------------------------------------


fixed arguments

default arguments

keyword arguments

varaible length arguments




libraries (or) package (or) module
-----------------------------------
Every library contains set of methods for the reusability and defined by someone else.

There are 2 types of libraries

1. builtin libraries
2. third party libraries

builtin libraries
-----------------
when python installed, all the builtin libraries( ftp logging, math , zipping ... )  will be installed.

path: C:\Python36\Lib

third party libraries
----------------------
Based on the developer requirement( cloud integeration , excel , db, rest apis )  , developer has to install the third party library


installing third party library
------------------------------

1. installing manually
2. pip tool / easy_install tool



importing library
------------------

importing all the methods of math library
-------------------------------------------
import math
print(math.floor(23.3))
print(math.log(3))


importing required methods
-------------------------
from math import floor,ceil        # . is not required
print(floor(34.9))           
print(ceil(34.3))


importing with alias name
------------------------
import math as m
print(m.floor(34.3))

importing all the methods without . operator
-----------------------------------------------
from math import *
print(floor(3.43))


Object oriented programming concepts
-------------------------------------


class  : blueprint of the model 
         class contains members. 
	 members can be attributes or method functions(methods)


object :  object is the instance of the class sharing all the features of the class

self   :  self is the instance of the object











database programming
---------------------






mysql installed

python library:  pymysql (mysql)   cx_Oracle(oracle)  pymongo( mongodB)







mysql commands
-----------------


mysql -u root -p   ( enter)


display all existing database
-------------------------------
show databases;

creating database
-----------------
create database walmart;

show databases;

accessing your database
--------------------------
use walmart ;

creating table
----------------
create table realestate ( street varchar(100) , city varchar(100) ) ;

view the table structure
--------------------------
desc realestate ;

inserting records
---------------------
insert into realestate values('101 GM ROad', 'Bangalore');
insert into realestate values('110 MG ROad', 'Hyderabad');


select * from realestate ;





create a table with the records matching realestate.csv

create table realestate1 (street varchar(100) ,city varchar(100) , zip varchar(100) , state varchar(100),beds varchar(100), baths varchar(100) ,sq__ft varchar(100),type varchar(100),sale_date varchar(100),	price varchar(100),	latitude varchar(100) ,longitude varchar(100) );


write a program to read realestate.csv and insert all the records to the database

























































































































